#!/usr/bin/env python
# -*- coding: utf-8 -*-
# generated by wxGlade 0.6.3 on Mon Jun  8 16:54:08 2009

import wx

# begin wxGlade: extracode
from kontrolers import NavBase
from kontrolers import NavBase
# end wxGlade



class SigViewFrame(SigViewBase):
    def __init__(self, *args, **kwds):
        # begin wxGlade: SigViewFrame.__init__
        kwds["style"] = wx.DEFAULT_FRAME_STYLE
        SigViewBase.__init__(self, *args, **kwds)
        self.panel_1 = wx.Panel(self, -1)
        
        # Tool Bar
        self.toolbar = wx.ToolBar(self, -1)
        self.SetToolBar(self.toolbar)
        self.toolbar.AddSeparator()
        self.toolbar.AddLabelTool(ID_STEP_TIME, "add", wx.Bitmap("/home/odor/download/tango-icon-theme-0.8.90/22x22/actions/list-add.png", wx.BITMAP_TYPE_ANY), wx.NullBitmap, wx.ITEM_NORMAL, "Dodaj signal", "Dodaj signal")
        self.toolbar.AddLabelTool(ID_STEP_CLK, "remove", wx.Bitmap("/home/odor/download/tango-icon-theme-0.8.90/22x22/actions/list-remove.png", wx.BITMAP_TYPE_ANY), wx.NullBitmap, wx.ITEM_NORMAL, "Ukloni signal", "Ukloni signal")
        self.toolbar.AddLabelTool(ID_STEP_INST, "revert", wx.Bitmap("/home/odor/download/tango-icon-theme-0.8.90/22x22/actions/edit-clear.png", wx.BITMAP_TYPE_ANY), wx.NullBitmap, wx.ITEM_NORMAL, "Ponisti izmene", "Ponisti izmene signala.")
        # Tool Bar end
        self.static_line_1 = wx.StaticLine(self.panel_1, -1)
        self.list_ctrl_1 = wx.ListCtrl(self.panel_1, -1, style=wx.LC_REPORT|wx.SUNKEN_BORDER)

        self.__set_properties()
        self.__do_layout()

        self.Bind(wx.EVT_TOOL, self.onSigAdd, id=ID_STEP_TIME)
        self.Bind(wx.EVT_TOOL, self.onSigRemove, id=ID_STEP_CLK)
        self.Bind(wx.EVT_TOOL, self.onRevert, id=ID_STEP_INST)
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: SigViewFrame.__set_properties
        self.SetTitle("Kontroler SImulatora")
        self.SetSize((300, 300))
        self.toolbar.Realize()
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: SigViewFrame.__do_layout
        sizer_1 = wx.BoxSizer(wx.VERTICAL)
        sizer_2 = wx.BoxSizer(wx.VERTICAL)
        sizer_2.Add(self.static_line_1, 0, wx.EXPAND, 0)
        sizer_2.Add(self.list_ctrl_1, 1, wx.EXPAND, 0)
        self.panel_1.SetSizer(sizer_2)
        sizer_1.Add(self.panel_1, 1, wx.EXPAND, 0)
        self.SetSizer(sizer_1)
        self.Layout()
        # end wxGlade

    def onSigAdd(self, event): # wxGlade: SigViewFrame.<event_handler>
        print "Event handler `onSigAdd' not implemented!"
        event.Skip()

    def onSigRemove(self, event): # wxGlade: SigViewFrame.<event_handler>
        print "Event handler `onSigRemove' not implemented!"
        event.Skip()

    def onRevert(self, event): # wxGlade: SigViewFrame.<event_handler>
        print "Event handler `onRevert' not implemented!"
        event.Skip()

# end of class SigViewFrame


if __name__ == "__main__":
    app = wx.PySimpleApp(0)
    wx.InitAllImageHandlers()
    frame_1 = SigViewFrame(None, -1, "")
    app.SetTopWindow(frame_1)
    frame_1.Show()
    app.MainLoop()
